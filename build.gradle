import com.example.jetcaster.buildsrc.Libs
import com.example.jetcaster.buildsrc.Versions

buildscript {
    repositories {
        google()
        mavenCentral()
        flatDir {
            dirs './appsuit'
        }
    }

    dependencies {
        classpath Libs.androidGradlePlugin
        classpath Libs.Kotlin.gradlePlugin
        classpath 'com.stealien.appsuit.gradle:AppSuit-AndroidStudio-24.2.0'
    }
}

plugins {
    id 'com.diffplug.spotless' version '6.4.2'
}

subprojects {
    repositories {
        google()
        mavenCentral()

        // Jetpack Compose SNAPSHOTs
        if (!Libs.AndroidX.Compose.snapshot.isEmpty()) {
            maven { url "https://androidx.dev/snapshots/builds/${Libs.AndroidX.Compose.snapshot}/artifacts/repository/" }
        }
        if (Libs.Accompanist.version.endsWith('SNAPSHOT')) {
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        }
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint(Versions.ktlint)
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors (disabled by default)
            allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

            freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
            freeCompilerArgs += '-opt-in=kotlinx.coroutines.FlowPreview'
            freeCompilerArgs += '-opt-in=kotlin.Experimental'

            // Set JVM target to 1.8
            jvmTarget = "1.8"
        }
    }
}
